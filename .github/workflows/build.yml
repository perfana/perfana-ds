# Copyright 2025 Perfana Contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: build and push perfana ds

on:
  workflow_dispatch:
  push:
    tags: ['**']  # all tags
  pull_request:
    branches: [main]


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Set tag name in test
        run: |
          VERSION=$(cat ./VERSION)
          echo "TAG_NAME=$VERSION" >> $GITHUB_ENV

      - name: Set tag name in release
        if: github.ref_type == 'tag'
        run: |
          VERSION=$(cat ./VERSION)
          echo "TAG_NAME=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Set SNAPSHOT docker repo
        if: github.ref_type != 'tag'
        run: |
          echo "DOCKER_IMAGE_REPO=perfana/perfana-ds" >> $GITHUB_ENV
          echo "SNYK_CONTINUE_ON_ERROR=true" >> $GITHUB_ENV
          echo "VERSION_TAG=${{ env.TAG_NAME }}-SNAPSHOT-${{ steps.vars.outputs.sha_short }}" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=${{ env.TAG_NAME }}+SNAPSHOT-${{ steps.vars.outputs.sha_short }}" >> $GITHUB_ENV

      - name: Set RELEASE docker repo
        if: github.ref_type == 'tag'
        run: |
          echo "DOCKER_IMAGE_REPO=perfana/perfana-ds" >> $GITHUB_ENV
          echo "SNYK_CONTINUE_ON_ERROR=false" >> $GITHUB_ENV
          echo "VERSION_TAG=${{ env.TAG_NAME }}" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=${{ env.TAG_NAME }}" >> $GITHUB_ENV
      - name: Copy package version to package
        run: |
          pip install toml-cli
          toml set --toml-path=pyproject.toml project.version ${{ env.PACKAGE_VERSION }}

      # https://docs.docker.com/build/ci/github-actions/cache/
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        # Only run this workflow if it is main branch on push event and git tag is set
#        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/fastapi-') }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: |
            Version=${{ env.PACKAGE_VERSION }}
          tags: ${{ env.DOCKER_IMAGE_REPO }}:${{ env.VERSION_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          platforms: linux/amd64,linux/arm64

      # Temp fix to prevent cache size growing too large
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      ## checkout perfana-gitops
      - name: Checkout perfana-gitops
        uses: actions/checkout@v4
        with:
         repository: perfana/perfana-gitops
         token: ${{ secrets.PAT }}
         path: perfana-gitops

      - name: Replace image tags in perfana-gitops for test
        working-directory: perfana-gitops
        if: github.ref_type != 'tag'
        run: |
           image_repository="repository: ${{ env.DOCKER_IMAGE_REPO }}"
           echo "$image_repository"
           sed -i "s|repository: .*|$image_repository|g" ./apps/perfana/test/perfana/perfana-ds-api-values.yaml
           sed -i "s|repository: .*|$image_repository|g" ./apps/perfana/test/perfana/perfana-ds-metric-worker-values.yaml
           sed -i "s|repository: .*|$image_repository|g" ./apps/perfana/test/perfana/perfana-ds-worker-values.yaml
           image_tag="tag: ${{ env.VERSION_TAG }}"
           echo "$image_tag"
           sed -i "s|tag: .*|$image_tag|g" ./apps/perfana/test/perfana/perfana-ds-api-values.yaml
           sed -i "s|tag: .*|$image_tag|g" ./apps/perfana/test/perfana/perfana-ds-worker-values.yaml
           sed -i "s|tag: .*|$image_tag|g" ./apps/perfana/test/perfana/perfana-ds-metric-worker-values.yaml

      - name: Replace image tags in perfana-gitops for demo
        working-directory: perfana-gitops
        if: github.ref_type == 'tag'
        run: |
           image_repository="repository: ${{ env.DOCKER_IMAGE_REPO }}"
           echo "$image_repository"
           sed -i "s|repository: .*|$image_repository|g" ./apps/perfana/demo/perfana/perfana-ds-api-values.yaml
           sed -i "s|repository: .*|$image_repository|g" ./apps/perfana/demo/perfana/perfana-ds-metric-worker-values.yaml
           sed -i "s|repository: .*|$image_repository|g" ./apps/perfana/demo/perfana/perfana-ds-worker-values.yaml
           image_tag="tag: ${{ env.VERSION_TAG }}"
           echo "$image_tag"
           sed -i "s|tag: .*|$image_tag|g" ./apps/perfana/demo/perfana/perfana-ds-api-values.yaml
           sed -i "s|tag: .*|$image_tag|g" ./apps/perfana/demo/perfana/perfana-ds-worker-values.yaml
           sed -i "s|tag: .*|$image_tag|g" ./apps/perfana/demo/perfana/perfana-ds-metric-worker-values.yaml

      - name: Commit files for test
        working-directory: perfana-gitops
        if: github.ref_type != 'tag'
        run: |
           git config --local user.email "action@github.com"
           git config --local user.name "GitHub Action"
           git commit --allow-empty -m "Bumped perfana-ds to ${{ env.VERSION_TAG }} in test environment" -a
           git push

      - name: Commit files for demo
        working-directory: perfana-gitops
        if: github.ref_type == 'tag'
        run: |
           git config --local user.email "action@github.com"
           git config --local user.name "GitHub Action"
           git commit --allow-empty -m "Bumped perfana-ds to ${{ env.VERSION_TAG }} in demo environment" -a
           git push
